Question-:
Create a class called Time that has separate int member data for hours, minutes and seconds. One constructor should initialize this data to 0, and another should initialize it to fixed values. A member function should display it in 11:59:59 format.
. A member function named add() should add two objects of type time passed as arguments. A main ( ) program should create two initialized values together, leaving the result in the third time variable. Finally it should display the value of this third variable.

SOURCE CODE-:

#include<iostream>
using namespace std;

class Time {
private:
    int hour;
    int minute;
    int second;
public:
    Time(){                      
       hour = 0;
       minute = 0;
       second = 0;
   }
    Time(int hour, int minute, int second) {      
        this->hour = hour;
        this->minute = minute;
        this->second = second;
   }
    void display(){
        cout<<"TIME : ";
        cout << hour << ":" << minute << ":" << second << endl;
}  
    void add(Time x, Time y) {
        int temp=0;
        second = x.second + y.second;
         if(second > 60 && second < 119){
            second = second-60;
            temp++;
       }  
       else if(second>119){
            second = second-120;
            temp=temp+2;
       }
       minute = x.minute + y.minute+temp;
       temp=0;
       if(minute > 60 && minute < 119){
          minute-=60;
          temp++;
       }
       else if(minute>119){
            minute = minute-120;
            temp=temp+2;
       }
          hour = x.hour + y.hour+temp;
          temp=0;
       cout << hour << " : " << minute << " : " << second << endl;  
    
  }    
};

int main() {
    int hour,minute,second;
    cout<<"Enter Time1(hours,minutes,seconds)\n";
    cin>>hour>>minute>>second;
    Time time1(hour,minute,second);
    cout<<"Enter Time2(hours,minutes,seconds)\n";
    cin>>hour>>minute>>second;
Time time2(hour,minute,second);
Time time3;

time1.display();
time2.display();

cout<<"\nAfter Addition: ";
time3.add(time1, time2);
return 0;
}
